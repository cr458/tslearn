env:
  global:
  - CODECLIMATE_REPO_TOKEN=d8c5ae082832ed947bc6e673ebfbd1592278fa04633401bf7d180687238fa397
  - GIT_COMMITTED_AT=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then git log -1 --pretty=format:%ct;
    else git log -1 --skip 1 --pretty=format:%ct; fi)
language: python
matrix:
  include:
    - python: '2.7'
      env: KERAS_BACKEND=tensorflow
    - python: '3.5'
      env: KERAS_BACKEND=tensorflow
    - python: '3.6'
      env: KERAS_BACKEND=tensorflow
    - python: '2.7'
      env: KERAS_BACKEND=theano
    - python: '3.5'
      env: KERAS_BACKEND=theano
    - python: '3.6'
      env: KERAS_BACKEND=theano
#    - python: '2.6'
#      env: KERAS_IGNORE="--exclude-path=tslearn/shapelets.py"
#    - python: '3.3'
#      env: KERAS_IGNORE="--exclude-path=tslearn/shapelets.py"
#    - python: '3.4'
#      env: KERAS_IGNORE="--exclude-path=tslearn/shapelets.py"
install:
- sudo apt-get update
- if [[ "$TRAVIS_PYTHON_VERSION" == 2.* ]];
  then wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
  else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- if [[ -z ${KERAS_IGNORE+x} ]];
  then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION Cython numpy=1.13 scipy tensorflow keras
  scikit-learn nose;
  else conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION Cython numpy scipy scikit-learn nose; fi
- source activate test-environment
- if [[ -z ${KERAS_IGNORE+x} ]];
  then pip install git+git://github.com/Theano/Theano.git; conda install mkl-service && export MKL_THREADING_LAYER=GNU;
  fi
- pip install coverage==4.3.1
- pip install -r requirements-test.txt
- pip install argparse
- pip install codeclimate-test-reporter
- rm -f tslearn/*.c
- python setup.py build_ext --inplace
script:
# run keras backend init to initialize backend config
- if [[ -z ${KERAS_IGNORE+x} ]]; then python -c "import keras.backend";
  sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;
  echo -e "Running tests with the following config:\n$(cat ~/.keras/keras.json)";
  else pip install nose-pattern-exclude; fi
- nosetests --exclude-dir=tests
- nosetests $KERAS_IGNORE --with-doctest --with-coverage --cover-erase --cover-package=tslearn
- if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then codeclimate-test-reporter; fi
notifications:
  email: false
deploy:
  provider: pypi
  user: rtavenar
  password:
    secure: Jli75RJ/GgRtVXb+vg5OVvwBx5wIrPDUbDteROEUVYgQMihQQ8yrl7wwUzJjYd8SaKchJYKx32H2kT5xX1bOOoEfw+l+116uU+fUndTmGdvi0f46pDLBA02QEsho14cUdw+956KgV7eLBk62/VQyMe0uoW3UN5GCe+hYYIN4R8K+MYbLX5DoBVh22mtgodP0xNzoEapBUo1ARJEQXHYMv/yvfnuLf0Zwg5Y6AMuAtn85WjRdXEG0/sbuu4sSe5F810rpI2wSacUyKVQ9GEBwnM57oYMsCPGen38ZRNdJuDMkWzAG9ZTaDY66qYaIYCwnAeYL130ogG3jk0q0rVCKBpJtC0aQV+7qKw1h53soqLPtJYtZw1u1MtxyWmsHuB2L/d9nqIt5JwG9QGe68j+wStpAs6uCbwiYU1R7fDUzG3iDDoAqefa3CR1fghfAZwPGrZrCcqsOni940kulNJtgtQ3cg/OTXjDQUXmkIRJ2J/iIGzmOC0A0hPwLNf+mRypPA8a0pC7HM+AjlcBipvvBJ+Q2hnxx2bOTcWfFSO0QMj15+pHBJPgh3Ly1JpG1AUAZF0rMben6yEvgKe8wBKNRPruacHtHGZOZNhAtApZNUyAefPh8R51vYXaJ62MUC2Nk/0JoUuhEZZPeXl4dUXKw0sgaK+yLY8j3lmeJtKPAN90=
  distributions: "sdist upload -r pypi"
  on:
    tags: true
